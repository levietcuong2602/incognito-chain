#!/bin/bash

# Ki·ªÉm tra tham s·ªë ƒë·∫ßu v√†o
if [ "$#" -lt 1 ]; then
    echo "Usage: $0 <session_name|all> [output_directory] [interval_seconds]"
    echo "Example: $0 all logs 5"
    echo "Example: $0 my_session /var/logs 10"
    exit 1
fi

SESSION="$1"
OUTPUT_DIR="${2:-logs}"  # Th∆∞ m·ª•c m·∫∑c ƒë·ªãnh l√† "logs" n·∫øu kh√¥ng ch·ªâ ƒë·ªãnh
SLEEP_INTERVAL="${3:-5}"  # M·∫∑c ƒë·ªãnh 5 gi√¢y n·∫øu kh√¥ng ch·ªâ ƒë·ªãnh

# T·∫°o th∆∞ m·ª•c logs n·∫øu ch∆∞a t·ªìn t·∫°i
mkdir -p "$OUTPUT_DIR"

# T·∫°o t√™n file log v·ªõi timestamp v√† session name
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
if [ "$SESSION" = "all" ]; then
    OUTPUT_FILE="$OUTPUT_DIR/tmux_all_sessions_${TIMESTAMP}.log"
    echo "üìÑ Capturing logs from ALL tmux sessions every ${SLEEP_INTERVAL}s"
else
    OUTPUT_FILE="$OUTPUT_DIR/tmux_session_${SESSION}_${TIMESTAMP}.log"
    echo "üìÑ Capturing logs from tmux session '${SESSION}' every ${SLEEP_INTERVAL}s"
fi

echo "üìÑ Log will be saved to: $OUTPUT_FILE"
echo "Press Ctrl+C to stop..."

# T·∫°o header cho file log
echo "====== TMUX LOG CAPTURE ======" > "$OUTPUT_FILE"
echo "Started: $(date)" >> "$OUTPUT_FILE"
echo "Session: ${SESSION}" >> "$OUTPUT_FILE"
echo "Interval: ${SLEEP_INTERVAL}s" >> "$OUTPUT_FILE"
echo "==============================" >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"

# X·ª≠ l√Ω khi nh·∫≠n t√≠n hi·ªáu Ctrl+C
trap 'echo -e "\n‚úÖ Capturing stopped. Log saved to: $OUTPUT_FILE"; exit 0' INT

# H√†m l·∫•y danh s√°ch session v√† pane
get_tmux_panes() {
    if [ "$SESSION" = "all" ]; then
        tmux list-panes -a -F "#{session_name}:#{window_index}.#{pane_index}"
    else
        tmux list-panes -t "$SESSION" -a -F "#{session_name}:#{window_index}.#{pane_index}" 2>/dev/null
        if [ $? -ne 0 ]; then
            echo "Error: Tmux session '$SESSION' not found."
            exit 1
        fi
    fi
}

# File t·∫°m ƒë·ªÉ l∆∞u danh s√°ch pane ƒë√£ th·∫•y
SEEN_PANES_FILE="/tmp/tmux_seen_panes_$$"
touch "$SEEN_PANES_FILE"

# X√≥a file t·∫°m khi tho√°t
trap 'echo -e "\n‚úÖ Capturing stopped. Log saved to: $OUTPUT_FILE"; rm -f "$SEEN_PANES_FILE"; exit 0' INT TERM EXIT

while true; do
    # L·∫•y timestamp hi·ªán t·∫°i
    CURRENT_TIMESTAMP=$(date "+%Y-%m-%d %H:%M:%S")
    
    # Ghi timestamp v√†o file
    echo -e "\n\n==============================================" >> "$OUTPUT_FILE"
    echo "TIMESTAMP: $CURRENT_TIMESTAMP" >> "$OUTPUT_FILE"
    echo "==============================================" >> "$OUTPUT_FILE"
    
    # L·∫∑p qua t·∫•t c·∫£ c√°c pane ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh
    get_tmux_panes | while read -r pane; do
        # Ki·ªÉm tra xem pane n√†y ƒë√£ ƒë∆∞·ª£c th·∫•y ch∆∞a
        if ! grep -q "^$pane$" "$SEEN_PANES_FILE"; then
            # N·∫øu ch∆∞a th·∫•y, th√™m v√†o file danh s√°ch ƒë√£ th·∫•y
            echo "$pane" >> "$SEEN_PANES_FILE"
            SESSION_NAME=$(echo "$pane" | cut -d':' -f1)
            echo -e "\n\n‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì" >> "$OUTPUT_FILE"
            echo "‚ñ∂ NEW PANE DETECTED: $pane (Session: $SESSION_NAME)" >> "$OUTPUT_FILE" 
            echo "‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì" >> "$OUTPUT_FILE"
        fi
        
        # Capture to√†n b·ªô n·ªôi dung pane
        CONTENT=$(tmux capture-pane -p -t "$pane")
        
        # Ghi th√¥ng tin pane v√† n·ªôi dung v√†o file
        echo -e "\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ" >> "$OUTPUT_FILE"
        echo "PANE: $pane" >> "$OUTPUT_FILE"
        echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ" >> "$OUTPUT_FILE"
        echo "$CONTENT" >> "$OUTPUT_FILE"
        
        # Hi·ªÉn th·ªã ti·∫øn tr√¨nh tr√™n terminal
        echo -ne "Capturing pane: $pane at $CURRENT_TIMESTAMP   \r"
    done
    
    # Hi·ªÉn th·ªã th√¥ng b√°o ho√†n th√†nh tr√™n terminal
    echo -e "Completed capture at $CURRENT_TIMESTAMP. Next capture in ${SLEEP_INTERVAL}s...\r"
    
    # ƒê·ª£i tr∆∞·ªõc khi qu√©t l·∫°i
    sleep "$SLEEP_INTERVAL"
done
