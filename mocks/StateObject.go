// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	common "github.com/incognitochain/incognito-chain/common"
	mock "github.com/stretchr/testify/mock"

	statedb "github.com/incognitochain/incognito-chain/dataaccessobject/statedb"
)

// StateObject is an autogenerated mock type for the StateObject type
type StateObject struct {
	mock.Mock
}

// IsEmpty provides a mock function with given fields:
func (_m *StateObject) IsEmpty() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Exist provides a mock function with given fields:
func (_m *StateObject) Exist() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetHash provides a mock function with given fields:
func (_m *StateObject) GetHash() common.Hash {
	ret := _m.Called()

	var r0 common.Hash
	if rf, ok := ret.Get(0).(func() common.Hash); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(common.Hash)
		}
	}

	return r0
}

// GetTrie provides a mock function with given fields: _a0
func (_m *StateObject) GetTrie(_a0 statedb.DatabaseAccessWarper) statedb.Trie {
	ret := _m.Called(_a0)

	var r0 statedb.Trie
	if rf, ok := ret.Get(0).(func(statedb.DatabaseAccessWarper) statedb.Trie); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(statedb.Trie)
		}
	}

	return r0
}

// GetType provides a mock function with given fields:
func (_m *StateObject) GetType() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetValue provides a mock function with given fields:
func (_m *StateObject) GetValue() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetValueBytes provides a mock function with given fields:
func (_m *StateObject) GetValueBytes() []byte {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// IsDeleted provides a mock function with given fields:
func (_m *StateObject) IsDeleted() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MarkDelete provides a mock function with given fields:
func (_m *StateObject) MarkDelete() {
	_m.Called()
}

// Reset provides a mock function with given fields:
func (_m *StateObject) Reset() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// SetError provides a mock function with given fields: _a0
func (_m *StateObject) SetError(_a0 error) {
	_m.Called(_a0)
}

// SetValue provides a mock function with given fields: _a0
func (_m *StateObject) SetValue(_a0 interface{}) {
	_m.Called(_a0)
}
